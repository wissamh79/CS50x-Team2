PRAGMA foreign_keys = ON;
CREATE TABLE IF NOT EXISTS  patient (
id INTEGER PRIMARY KEY,
name TEXT NOT NULL,
password TEXT NOT NULL,
phone TEXT,
email TEXT NOT NULL UNIQUE,
birthdate DATE,
gender TEXT,
is_admin BOOLEAN NOT NULL DEFAULT False
);


CREATE TABLE IF NOT EXISTS  Doctor (
id INTEGER PRIMARY KEY,
name TEXT NOT NULL,
password TEXT NOT NULL,
phone TEXT,
email TEXT NOT NULL UNIQUE,
age TEXT,
gender TEXT,
specialty TEXT,
description TEXT,
years_of_practice TEXT,
is_admin BOOLEAN NOT NULL DEFAULT False
);


CREATE TABLE IF NOT EXISTS reservation_available (
id INTEGER PRIMARY KEY,
date DATE,
time TIME,
is_available BOOLEAN NOT NULL DEFAULT False,
FOREIGN KEY (Doctor_id) REFERENCES Doctor(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS address (
id INTEGER PRIMARY KEY,
addresses TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS specialty (
id INTEGER PRIMARY KEY,
specialties TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS doctors_address (
id INTEGER PRIMARY KEY,
FOREIGN KEY (Doctor_id) REFERENCES Doctor(id) ON DELETE CASCADE,
FOREIGN KEY (address_id) REFERENCES address(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS patients_address (
id INTEGER PRIMARY KEY,
FOREIGN KEY (patient_id) REFERENCES patient(id) ON DELETE CASCADE,
FOREIGN KEY (address_id) REFERENCES address(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS doctors_specialties (
id INTEGER PRIMARY KEY,
FOREIGN KEY (Doctor_id) REFERENCES Doctor(id) ON DELETE CASCADE,
FOREIGN KEY (specialty_id) REFERENCES specialty(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS patient_reservation (
id INTEGER PRIMARY KEY,
FOREIGN KEY (patient_id) REFERENCES patient(id) ON DELETE CASCADE,
FOREIGN KEY (Doctor_id) REFERENCES Doctor(id) ON DELETE CASCADE,
FOREIGN KEY (reservation_available_id) REFERENCES reservation_available(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS patient_history (
id INTEGER PRIMARY KEY,

FOREIGN KEY (patient_id) REFERENCES patient(id) ON DELETE CASCADE,
FOREIGN KEY (patient_reservation_id) REFERENCES patient_reservation(id) ON DELETE CASCADE
);
